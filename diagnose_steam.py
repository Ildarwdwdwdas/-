#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π Steam
"""

import json
import sys
import base64
import asyncio
import time
from pathlib import Path
from steam_client import SteamAuthenticator, SteamWebClient


def print_step(message, status="INFO"):
    icons = {"INFO": "‚ÑπÔ∏è", "SUCCESS": "‚úÖ", "ERROR": "‚ùå", "WARNING": "‚ö†Ô∏è"}
    print(f"{icons.get(status, '‚ÑπÔ∏è')} {message}")


def check_config_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∏ –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É config.json"""
    print_step("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞...")
    
    if not Path("config.json").exists():
        print_step("–§–∞–π–ª config.json –Ω–µ –Ω–∞–π–¥–µ–Ω!", "ERROR")
        return False
    
    try:
        with open("config.json", "r", encoding="utf-8") as f:
            config = json.load(f)
        
        required_fields = [
            "steam_account.login",
            "steam_account.password", 
            "steam_account.shared_secret",
            "steam_account.identity_secret",
            "steam_account.device_id",
            "steam_account.steamid"
        ]
        
        missing_fields = []
        for field_path in required_fields:
            keys = field_path.split(".")
            current = config
            
            for key in keys:
                if key not in current:
                    missing_fields.append(field_path)
                    break
                current = current[key]
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ –Ω–µ –ø—É—Å—Ç–æ–µ
            if field_path not in missing_fields and not str(current).strip():
                missing_fields.append(field_path + " (–ø—É—Å—Ç–æ–µ)")
        
        if missing_fields:
            print_step(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∏–ª–∏ –ø—É—Å—Ç—ã–µ –ø–æ–ª—è: {', '.join(missing_fields)}", "ERROR")
            return False
        
        print_step("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è", "SUCCESS")
        return config
        
    except json.JSONDecodeError as e:
        print_step(f"–û—à–∏–±–∫–∞ JSON –≤ config.json: {e}", "ERROR")
        return False
    except Exception as e:
        print_step(f"–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è config.json: {e}", "ERROR")
        return False


def check_shared_secret(shared_secret):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç shared_secret"""
    print_step("–ü—Ä–æ–≤–µ—Ä–∫–∞ shared_secret...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ base64
        decoded = base64.b64decode(shared_secret)
        if len(decoded) != 20:  # Steam shared_secret –æ–±—ã—á–Ω–æ 20 –±–∞–π—Ç
            print_step("shared_secret –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–ª–∏–Ω—É –ø–æ—Å–ª–µ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è", "WARNING")
        
        print_step(f"shared_secret –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω (–¥–ª–∏–Ω–∞: {len(decoded)} –±–∞–π—Ç)", "SUCCESS")
        return True
        
    except Exception as e:
        print_step(f"shared_secret –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç base64: {e}", "ERROR")
        print_step("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–∏ shared_secret –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–∑ .maFile", "WARNING")
        return False


def test_steam_guard_code(shared_secret):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é Steam Guard –∫–æ–¥–∞"""
    print_step("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Steam Guard –∫–æ–¥–∞...")
    
    try:
        authenticator = SteamAuthenticator(shared_secret)
        code = authenticator.generate_auth_code()
        
        print_step(f"Steam Guard –∫–æ–¥: {code}", "SUCCESS")
        print_step("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ —ç—Ç–æ—Ç –∫–æ–¥ —Å –∫–æ–¥–æ–º –≤ –≤–∞—à–µ–º Steam Guard", "INFO")
        return True
        
    except Exception as e:
        print_step(f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Steam Guard –∫–æ–¥–∞: {e}", "ERROR")
        return False


async def test_steam_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Steam"""
    print_step("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Steam...")
    
    try:
        async with SteamWebClient() as client:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Steam
            async with client.session.get("https://steamcommunity.com/", timeout=10) as response:
                if response.status == 200:
                    print_step("Steam –¥–æ—Å—Ç—É–ø–µ–Ω", "SUCCESS")
                    return True
                else:
                    print_step(f"Steam –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: {response.status})", "ERROR")
                    return False
                    
    except Exception as e:
        print_step(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Steam: {e}", "ERROR")
        print_step("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ", "WARNING")
        return False


async def test_rsa_key_request(username):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ RSA –∫–ª—é—á–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print_step(f"–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è RSA –∫–ª—é—á–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{username}'...")
    
    try:
        async with SteamWebClient() as client:
            rsa_key = await client._get_rsa_key(username)
            
            if rsa_key and rsa_key.get('modulus'):
                print_step("RSA –∫–ª—é—á –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ", "SUCCESS")
                return True
            else:
                print_step("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å RSA –∫–ª—é—á", "ERROR")
                print_step("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ Steam", "WARNING")
                return False
                
    except Exception as e:
        print_step(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è RSA –∫–ª—é—á–∞: {e}", "ERROR")
        return False


def check_steam_credentials(config):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Steam"""
    print_step("–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö Steam...")
    
    steam_account = config["steam_account"]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç SteamID
    try:
        steamid = int(steam_account["steamid"])
        if steamid < 76561197960265728:  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π SteamID64
            print_step("SteamID –∫–∞–∂–µ—Ç—Å—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º", "WARNING")
        else:
            print_step(f"SteamID: {steamid}", "SUCCESS")
    except ValueError:
        print_step("SteamID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º", "ERROR")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–Ω
    login = steam_account["login"]
    if len(login) < 3:
        print_step("–õ–æ–≥–∏–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π", "WARNING")
    else:
        print_step(f"–õ–æ–≥–∏–Ω: {login}", "SUCCESS")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–æ–ª—å
    password = steam_account["password"]
    if len(password) < 5:
        print_step("–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π", "WARNING")
    else:
        print_step("–ü–∞—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", "SUCCESS")
    
    return True


async def full_diagnosis():
    """–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Steam Password Changer")
    print("=" * 60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config = check_config_file()
    if not config:
        print("\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ config.json –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å–Ω–æ–≤–∞.")
        return False
    
    steam_account = config["steam_account"]
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if not check_steam_credentials(config):
        return False
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ shared_secret
    if not check_shared_secret(steam_account["shared_secret"]):
        return False
    
    # 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Steam Guard
    if not test_steam_guard_code(steam_account["shared_secret"]):
        return False
    
    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Steam
    if not await test_steam_connection():
        return False
    
    # 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è RSA –∫–ª—é—á–∞
    if not await test_rsa_key_request(steam_account["login"]):
        return False
    
    print("\n" + "=" * 60)
    print("‚úÖ –ë–∞–∑–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Steam Guard –∫–æ–¥ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–æ–¥–æ–º –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω Steam Guard")
    print("3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞—Ä–æ–ª—å –∞–∫—Ç—É–∞–ª–µ–Ω")
    print("4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ Steam –≤—Ä—É—á–Ω—É—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    
    return True


def print_troubleshooting_tips():
    """–í—ã–≤–æ–¥–∏—Ç —Å–æ–≤–µ—Ç—ã –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–ø–æ–ª–∞–¥–æ–∫"""
    print("\n" + "=" * 60)
    print("üõ†Ô∏è –°–æ–≤–µ—Ç—ã –ø–æ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é –Ω–µ–ø–æ–ª–∞–¥–æ–∫:")
    print("=" * 60)
    
    print("\n1. –ü—Ä–æ–±–ª–µ–º—ã —Å shared_secret:")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–∏ shared_secret –∏–∑ .maFile —Ñ–∞–π–ª–∞ SDA")
    print("   - –§–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ maFiles Steam Desktop Authenticator")
    print("   - Shared_secret –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ base64 (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'dGVzdF9zZWNyZXQ=')")
    
    print("\n2. –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è Steam")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω")
    print("   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ Steam –∫–ª–∏–µ–Ω—Ç –≤—Ä—É—á–Ω—É—é")
    
    print("\n3. –ü—Ä–æ–±–ª–µ–º—ã —Å Steam Guard:")
    print("   - –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –∫–æ–¥–æ–º –≤ –º–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ)")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ device_id –∏ identity_secret —Ç–∞–∫–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ")
    
    print("\n4. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é:")
    print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
    print("   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Steam –¥–æ—Å—Ç—É–ø–µ–Ω")
    print("   - –û—Ç–∫–ª—é—á–∏—Ç–µ VPN –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    try:
        success = await full_diagnosis()
        
        if not success:
            print_troubleshooting_tips()
            
        print(f"\n{'='*60}")
        print("–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
        if success:
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
        else:
            print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
            
    except KeyboardInterrupt:
        print("\n–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")


if __name__ == "__main__":
    asyncio.run(main())