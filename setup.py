#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª–µ–π Steam
"""

import os
import sys
import subprocess
import platform
from pathlib import Path


def print_header(title: str):
    """–ü–µ—á–∞—Ç–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫"""
    print(f"\n{'='*60}")
    print(f"üîß {title}")
    print(f"{'='*60}")


def print_step(step: str, status: str = "INFO"):
    """–ü–µ—á–∞—Ç–∞–µ—Ç —à–∞–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    icons = {
        "INFO": "‚ÑπÔ∏è",
        "SUCCESS": "‚úÖ",
        "ERROR": "‚ùå",
        "WARNING": "‚ö†Ô∏è"
    }
    print(f"{icons.get(status, '‚ÑπÔ∏è')} {step}")


def check_python_version():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–µ—Ä—Å–∏—é Python"""
    print_step("–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python...")
    
    version = sys.version_info
    if version < (3, 7):
        print_step(f"–û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.7+, –Ω–∞–π–¥–µ–Ω Python {version.major}.{version.minor}", "ERROR")
        return False
    
    print_step(f"Python {version.major}.{version.minor}.{version.micro} - OK", "SUCCESS")
    return True


def install_dependencies():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print_step("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    requirements_file = "requirements.txt"
    if not Path(requirements_file).exists():
        print_step(f"–§–∞–π–ª {requirements_file} –Ω–µ –Ω–∞–π–¥–µ–Ω", "ERROR")
        return False
    
    try:
        subprocess.check_call([
            sys.executable, "-m", "pip", "install", "-r", requirements_file
        ])
        print_step("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ", "SUCCESS")
        return True
    except subprocess.CalledProcessError as e:
        print_step(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}", "ERROR")
        return False


def run_system_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã"""
    print_step("–ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...")
    
    try:
        result = subprocess.run([
            sys.executable, "test_system.py", "--auto"
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print_step("–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ", "SUCCESS")
            return True
        else:
            print_step("–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã", "WARNING")
            print(result.stdout)
            return False
    except Exception as e:
        print_step(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤: {e}", "ERROR")
        return False


def create_example_config():
    """–°–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print_step("–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–º–µ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    example_config = {
        "steam_account": {
            "login": "YOUR_STEAM_LOGIN",
            "password": "YOUR_CURRENT_PASSWORD",
            "shared_secret": "YOUR_SHARED_SECRET_FROM_SDA",
            "identity_secret": "YOUR_IDENTITY_SECRET_FROM_SDA", 
            "device_id": "YOUR_DEVICE_ID_FROM_SDA",
            "steamid": 76561198000000000
        },
        "password_change": {
            "change_interval_hours": 24,
            "password_length": 16,
            "use_special_chars": True,
            "use_numbers": True,
            "use_uppercase": True,
            "use_lowercase": True,
            "exclude_ambiguous": True
        },
        "security": {
            "save_password_history": True,
            "max_password_history": 10,
            "require_confirmation": False,
            "backup_old_passwords": True
        },
        "logging": {
            "level": "INFO",
            "log_to_file": True,
            "log_file": "steam_password_changer.log",
            "max_log_size_mb": 10,
            "backup_count": 5
        },
        "notifications": {
            "enable_notifications": True,
            "notify_on_success": True,
            "notify_on_error": True,
            "notification_method": "console"
        }
    }
    
    try:
        import json
        with open("config.example.json", "w", encoding="utf-8") as f:
            json.dump(example_config, f, ensure_ascii=False, indent=4)
        
        print_step("–ü—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω: config.example.json", "SUCCESS")
        return True
    except Exception as e:
        print_step(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}", "ERROR")
        return False


def create_systemd_service():
    """–°–æ–∑–¥–∞–µ—Ç systemd service —Ñ–∞–π–ª –¥–ª—è Linux"""
    if platform.system() != "Linux":
        return
    
    print_step("–°–æ–∑–¥–∞–Ω–∏–µ systemd service —Ñ–∞–π–ª–∞...")
    
    current_dir = Path.cwd()
    python_path = sys.executable
    
    service_content = f"""[Unit]
Description=Steam Password Changer
After=network.target

[Service]
Type=simple
User={os.getenv('USER', 'steam')}
WorkingDirectory={current_dir}
ExecStart={python_path} main.py start
Restart=always
RestartSec=10
Environment=PYTHONPATH={current_dir}

[Install]
WantedBy=multi-user.target
"""
    
    try:
        with open("steam-password-changer.service", "w", encoding="utf-8") as f:
            f.write(service_content)
        
        print_step("Systemd service —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: steam-password-changer.service", "SUCCESS")
        print_step("–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–ª—É–∂–±—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:", "INFO")
        print_step("  sudo cp steam-password-changer.service /etc/systemd/system/", "INFO")
        print_step("  sudo systemctl enable steam-password-changer", "INFO")
        print_step("  sudo systemctl start steam-password-changer", "INFO")
        
    except Exception as e:
        print_step(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è systemd service: {e}", "ERROR")


def create_quick_start_guide():
    """–°–æ–∑–¥–∞–µ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞"""
    print_step("–°–æ–∑–¥–∞–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞...")
    
    guide = """# üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç Steam Password Changer

## 1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö Steam Guard

–î–ª—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –Ω—É–∂–Ω—ã –¥–∞–Ω–Ω—ã–µ Steam Guard. –ü–æ–ª—É—á–∏—Ç–µ –∏—Ö –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤:

### –í–∞—Ä–∏–∞–Ω—Ç A: Steam Desktop Authenticator (SDA)
1. –°–∫–∞—á–∞–π—Ç–µ SDA: https://github.com/Jessecar96/SteamDesktopAuthenticator
2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–ª—è –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
3. –ù–∞–π–¥–∏—Ç–µ —Ñ–∞–π–ª .maFile –≤ –ø–∞–ø–∫–µ maFiles
4. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è

### –í–∞—Ä–∏–∞–Ω—Ç B: –≠–∫—Å–ø–æ—Ä—Ç –∏–∑ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (Root Android)
–¢—Ä–µ–±—É–µ—Ç—Å—è root –¥–æ—Å—Ç—É–ø –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Steam.

## 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

```bash
# –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
cp config.example.json config.json

# –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config.json —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
nano config.json
```

## 3. –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã

```bash
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
python main.py test-connection

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è
python main.py test-password

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
python main.py start
```

## 4. –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

```bash
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
python main.py status

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–º–µ–Ω–∞ –ø–∞—Ä–æ–ª—è
python main.py change

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
tail -f steam_password_changer.log
```

## 5. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

```bash
# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
chmod 600 config.json

# –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
cp config.json config_backup_$(date +%Y%m%d).json
```

## 6. –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ (Linux)

```bash
# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∞–∫ —Å–∏—Å—Ç–µ–º–Ω—É—é —Å–ª—É–∂–±—É
sudo cp steam-password-changer.service /etc/systemd/system/
sudo systemctl enable steam-password-changer
sudo systemctl start steam-password-changer

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–ª—É–∂–±—ã
sudo systemctl status steam-password-changer
```

## üÜò –ü–æ–º–æ—â—å

–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:
1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ config.json –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö
2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Steam Guard —Ä–∞–±–æ—Ç–∞–µ—Ç
3. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ª–æ–≥–∏: tail -f steam_password_changer.log
4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã: python test_system.py

–£–¥–∞—á–∏! üéÆ
"""
    
    try:
        with open("QUICK_START.md", "w", encoding="utf-8") as f:
            f.write(guide)
        
        print_step("–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ —Å–æ–∑–¥–∞–Ω–æ: QUICK_START.md", "SUCCESS")
        return True
    except Exception as e:
        print_step(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞: {e}", "ERROR")
        return False


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏"""
    print("üîê Steam Password Changer - –£—Å—Ç–∞–Ω–æ–≤–∫–∞")
    print("=" * 60)
    print("–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–º–µ–Ω—ã –ø–∞—Ä–æ–ª–µ–π Steam")
    print("–ë–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ChromeDriver –∏ –±—Ä–∞—É–∑–µ—Ä–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
    print_header("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
    if not check_python_version():
        sys.exit(1)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π  
    print_header("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    if "--skip-deps" not in sys.argv:
        if not install_dependencies():
            print_step("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n)", "WARNING")
            if input().lower() != 'y':
                sys.exit(1)
    else:
        print_step("–ü—Ä–æ–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π", "INFO")
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã
    print_header("–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–µ—Å—Ç—ã")
    if "--skip-tests" not in sys.argv:
        run_system_tests()
    else:
        print_step("–ü—Ä–æ–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤", "INFO")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    print_header("–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤")
    create_example_config()
    create_systemd_service()
    create_quick_start_guide()
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    print_header("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print_step("–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é", "SUCCESS")
    print()
    print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü–æ–ª—É—á–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ Steam Guard (—Å–º. QUICK_START.md)")
    print("2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ config.example.json –≤ config.json")
    print("3. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config.json —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    print("4. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: python main.py test-connection") 
    print("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python main.py start")
    print()
    print("üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:")
    print("- README.md - –ø–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
    print("- QUICK_START.md - –±—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç")
    print("- config.example.json - –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print()
    print("üîí –í–∞–∂–Ω–æ:")
    print("- –ó–∞—â–∏—Ç–∏—Ç–µ config.json: chmod 600 config.json")
    print("- –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ Steam Guard –¥–∞–Ω–Ω—ã—Ö")
    print("- –¢–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º")
    print()
    print("üéÆ –£–¥–∞—á–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Steam!")


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        sys.exit(1)
    except Exception as e:
        print(f"\n–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        sys.exit(1)